// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdministratorsColumns holds the columns for the "administrators" table.
	AdministratorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "avatar", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "college", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "number", Type: field.TypeString},
		{Name: "user_administrators", Type: field.TypeInt, Unique: true},
	}
	// AdministratorsTable holds the schema information for the "administrators" table.
	AdministratorsTable = &schema.Table{
		Name:       "administrators",
		Columns:    AdministratorsColumns,
		PrimaryKey: []*schema.Column{AdministratorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "administrators_users_administrators",
				Columns:    []*schema.Column{AdministratorsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_name", Type: field.TypeString, Nullable: true},
		{Name: "file_url", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "upload_time", Type: field.TypeTime, Nullable: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "reviews_title", Type: field.TypeString},
		{Name: "user_reviews", Type: field.TypeInt, Nullable: true},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reviews_users_reviews",
				Columns:    []*schema.Column{ReviewsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// StudentsColumns holds the columns for the "students" table.
	StudentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "avatar", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "college", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "major", Type: field.TypeString},
		{Name: "class", Type: field.TypeString},
		{Name: "number", Type: field.TypeString},
		{Name: "user_students", Type: field.TypeInt, Unique: true},
	}
	// StudentsTable holds the schema information for the "students" table.
	StudentsTable = &schema.Table{
		Name:       "students",
		Columns:    StudentsColumns,
		PrimaryKey: []*schema.Column{StudentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "students_users_students",
				Columns:    []*schema.Column{StudentsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// TeachersColumns holds the columns for the "teachers" table.
	TeachersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "avatar", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "college", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString},
		{Name: "number", Type: field.TypeString},
		{Name: "user_teachers", Type: field.TypeInt, Unique: true},
	}
	// TeachersTable holds the schema information for the "teachers" table.
	TeachersTable = &schema.Table{
		Name:       "teachers",
		Columns:    TeachersColumns,
		PrimaryKey: []*schema.Column{TeachersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "teachers_users_teachers",
				Columns:    []*schema.Column{TeachersColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ThesesColumns holds the columns for the "theses" table.
	ThesesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "file_name", Type: field.TypeString, Nullable: true},
		{Name: "file_url", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "file_state", Type: field.TypeInt},
		{Name: "upload_time", Type: field.TypeTime, Nullable: true},
		{Name: "chinese_title", Type: field.TypeString},
		{Name: "english_title", Type: field.TypeString},
		{Name: "authors", Type: field.TypeString},
		{Name: "teachers", Type: field.TypeString},
		{Name: "first_advance", Type: field.TypeString},
		{Name: "second_advance", Type: field.TypeString},
		{Name: "third_advance", Type: field.TypeString},
		{Name: "drawback", Type: field.TypeString},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "thesis_examine", Type: field.TypeInt, Nullable: true},
		{Name: "user_thesis", Type: field.TypeInt, Nullable: true},
	}
	// ThesesTable holds the schema information for the "theses" table.
	ThesesTable = &schema.Table{
		Name:       "theses",
		Columns:    ThesesColumns,
		PrimaryKey: []*schema.Column{ThesesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "theses_users_examine",
				Columns:    []*schema.Column{ThesesColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "theses_users_thesis",
				Columns:    []*schema.Column{ThesesColumns[15]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "account", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeInt},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdministratorsTable,
		ReviewsTable,
		StudentsTable,
		TeachersTable,
		ThesesTable,
		UsersTable,
	}
)

func init() {
	AdministratorsTable.ForeignKeys[0].RefTable = UsersTable
	ReviewsTable.ForeignKeys[0].RefTable = UsersTable
	StudentsTable.ForeignKeys[0].RefTable = UsersTable
	TeachersTable.ForeignKeys[0].RefTable = UsersTable
	ThesesTable.ForeignKeys[0].RefTable = UsersTable
	ThesesTable.ForeignKeys[1].RefTable = UsersTable
}
